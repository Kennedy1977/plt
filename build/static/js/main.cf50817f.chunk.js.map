{"version":3,"sources":["services/state/reducers/index.js","components/ui/ProductListing/Filter.js","components/ui/ProductListing/ActionsPanel.js","services/state/actions/index.js","components/ui/ProductListing/ProductTile.js","components/ui/ProductListing/Total.js","components/ui/ProductListing/ProductListing.js","components/ui/LoadCatalog.js","services/api/index.js","components/App.js","index.js"],"names":["initialState","catalog","total","isLoaded","Filter","props","className","onChange","e","callback","target","value","defaultValue","filterOptions","map","option","index","key","ActionsPanel","useState","qty","setQty","dispatch","useDispatch","updateQuantity","dir","id","el","document","querySelector","newQty","parseInt","oldQty","preTotal","parseFloat","price","console","log","type","payload","onClick","readOnly","ProductTile","products","product","filterClass","filter","colour","src","img","alt","productTitle","Total","displayTotal","useSelector","state","toFixed","ProductListing","setFilter","colours","uniqueColours","sort","item","pos","ary","LoadCatalog","useEffect","fetched","fetch","axios","get","then","response","data","catch","error","App","store","createStore","action","deduction","addition","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cf50817f.chunk.js","sourcesContent":["const initialState = {\n  catalog: {},\n  total: 0,\n  isLoaded: 0,\n};\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_CATALOG\":\n      return {\n        ...state,\n        catalog: action.payload,\n      };\n    case \"IS_LOADED\":\n      return {\n        ...state,\n        isLoaded: (state.isLoaded = 1),\n      };\n    case \"UPDATE_TOTAL\":\n      let deduction = action.payload[0];\n      let addition = action.payload[1];\n\n      return {\n        ...state,\n        total: (state.total = state.total + addition - deduction),\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nexport const Filter = (props) => {\n  return (\n    <section className=\"filter\">\n      <select\n        onChange={(e) => props.callback(e.target.value)}\n        defaultValue=\"all\"\n      >\n        <option value=\"all\">Colour filter</option>\n        {props.filterOptions.map((option, index) => {\n          return (\n            <option key={index} value={option}>\n              {option}\n            </option>\n          );\n        })}\n      </select>\n    </section>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateTotal } from \"../../../services/state/actions/index\";\n\nexport const ActionsPanel = (props) => {\n  const [qty, setQty] = useState(0);\n  const dispatch = useDispatch();\n\n  function updateQuantity(dir, id) {\n    let el = document.querySelector(`#${id}`);\n    let newQty = parseInt(el.value) + dir;\n    let oldQty = qty;\n\n    dir === 0 ? setQty(0) : newQty === -1 ? setQty(0) : setQty(newQty);\n    let preTotal = parseFloat(oldQty * props.price);\n    let total = parseFloat(newQty * props.price);\n\n    if (dir === 0) {\n      total = 0;\n    }\n\n    console.log(preTotal, total);\n\n    dispatch(updateTotal([preTotal, total]));\n  }\n\n  return (\n    <div className=\"actions-panel\">\n      <button\n        className=\"btn-toggle\"\n        type=\"button\"\n        onClick={() => {\n          updateQuantity(-1, props.id);\n        }}\n      >\n        -\n      </button>\n      <div>\n        <input id={props.id} type=\"number\" value={qty} readOnly />\n        <button\n          className=\"btn-remove\"\n          type=\"button\"\n          onClick={() => {\n            updateQuantity(0, props.id);\n          }}\n        >\n          REMOVE\n        </button>\n      </div>\n      <button\n        className=\"btn-toggle\"\n        type=\"button\"\n        onClick={() => {\n          updateQuantity(1, props.id);\n        }}\n      >\n        +\n      </button>\n    </div>\n  );\n};\n","export const updateCatalog = (data) => {\n  return {\n    type: \"UPDATE_CATALOG\",\n    payload: data,\n  };\n};\n\nexport const updateTotal = (data) => {\n  return {\n    type: \"UPDATE_TOTAL\",\n    payload: data,\n  };\n};\n","import React from \"react\";\n\nimport { ActionsPanel } from \"./ActionsPanel\";\n\nexport const ProductTile = (props) => {\n  return (\n    <>\n      {props.products.map((product, index) => {\n        let filterClass =\n          props.filter === \"all\"\n            ? \"\"\n            : product.colour !== props.filter\n            ? \"hidden\"\n            : \"\";\n        return (\n          <section\n            className={`product-tile ${product.colour} ${filterClass}`}\n            key={index}\n          >\n            <div>\n              <img src={product.img} alt={product.productTitle} />\n              <div className=\"title-wrap\">\n                <h2>{product.productTitle}</h2>\n              </div>\n              <p className=\"product-price\">&pound;{product.price}</p>\n            </div>\n            <ActionsPanel id={product.id} price={product.price} />\n          </section>\n        );\n      })}\n    </>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nexport const Total = () => {\n  const total = useSelector((state) => state.total);\n  let displayTotal = total.toFixed(2);\n\n  return (\n    <section className=\"total\">\n      <p>Total : &pound;{displayTotal}</p>\n    </section>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Filter } from \"./Filter\";\nimport { ProductTile } from \"./ProductTile\";\nimport { Total } from \"./Total\";\nimport \"./ProductListing.scss\";\n\nexport const ProductListing = () => {\n  const [filter, setFilter] = useState(\"all\");\n  const products = useSelector((state) => state.catalog.products);\n\n  let colours = products.map(({ colour }) => colour);\n  let uniqueColours = uniq(colours);\n  function uniq(a) {\n    return a.sort().filter(function (item, pos, ary) {\n      return !pos || item !== ary[pos - 1];\n    });\n  }\n\n  const filterSelection = (e) => {\n    setFilter(e);\n  };\n\n  return (\n    <>\n      <Filter filterOptions={uniqueColours} callback={filterSelection} />\n      <section className=\"product-tile-wrapper\">\n        <ProductTile products={products} filter={filter} />\n      </section>\n      <Total />\n    </>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as API from \"../../services/api/index\";\nimport { ProductListing } from \"./ProductListing/ProductListing\";\n\nfunction LoadCatalog() {\n  const catalog = useSelector((state) => state.catalog);\n  const isLoaded = useSelector((state) => state.isLoaded);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    catalog.products ? fetched() : fetch();\n  });\n\n  let fetch = () => {\n    if (isLoaded === 0) {\n      dispatch(API.loadCatalog());\n    }\n  };\n  let fetched = () => {\n    dispatch({ type: \"IS_LOADED\" });\n  };\n\n  return <>{isLoaded === 0 ? <div>Loading...</div> : <ProductListing />}</>;\n}\n\nexport default LoadCatalog;\n","import { updateCatalog } from \"../state/actions/index\";\nimport axios from \"axios\";\n\nexport const loadCatalog = () => {\n  return (dispatch) => {\n    axios\n      .get(\"./data/products.json\")\n      .then((response) => {\n        dispatch(updateCatalog(response.data));\n      })\n      .catch((error) => {\n        throw error;\n      });\n  };\n};\n","import React from \"react\";\nimport LoadCatalog from \"./ui/LoadCatalog\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <LoadCatalog />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./services/state/reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}